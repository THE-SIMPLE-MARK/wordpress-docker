events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name {DOMAIN1} {DOMAIN2};

        # redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name {DOMAIN1} {DOMAIN2};

        # SSL certificate and key
        ssl_certificate /etc/letsencrypt/live/{CERT_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{CERT_NAME}/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
        ssl_session_tickets off;

        ssl_dhparam /etc/nginx/ffdhe2048.txt;

        # intermediate configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers     ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;

        # HSTS (ngx_http_headers_module is required) (63072000 seconds)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/letsencrypt/live/{CERT_NAME}/chain.pem;

        # disable NGINX version information in response headers
        server_tokens off;

        location / {
            # reject requests with an invalid Host header by closing the connection
            if ($host !~ ^(domain1\.com|domain2\.com)$) {
                return 444;
            }

            # pass the original Host header to the backend
            proxy_set_header Host $host;


            if ($host = {DOMAIN1}) {
                proxy_pass http://127.0.0.1:3000;
            }
            if ($host = {DOMAIN2}) {
                proxy_pass http://127.0.0.1:3001;
            }
            # add additional conditions as needed
        }
    }
}